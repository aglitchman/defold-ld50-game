go.property("factory_url", msg.url("#factory"))
go.property("player_url", msg.url(""))

go.property("spawn_rate", 2)
go.property("radius", 5)

local level_state = require("ld50.scenes.runaway.level_state")
local render3d = require("scene3d.render.render3d")

function init(self)
    self.spawn_timer = 0

    self.default_pos = go.get_position()
end

function final(self)
end

function update(self, dt)
    local player_pos = go.get_position(self.player_url)
    go.set_position(vmath.vector3(0, 0, player_pos.z) + self.default_pos)

    self.spawn_timer = self.spawn_timer + dt

    while self.spawn_timer > (1 / self.spawn_rate) do
        local props = {
            ["velocity"] = math.random(3, 8)
        }
        local pos = vmath.vector3(self.radius * 2 * (math.random() - 0.5), 0, 0)
        factory.create(self.factory_url, go.get_position() + pos, nil, props)

        self.spawn_timer = self.spawn_timer - (1 / self.spawn_rate)
    end

    render3d.debug_log(string.format("Box Num %d", level_state.box_count))
end

function on_message(self, message_id, message, sender)
    if message_id == hash("merge") then
        -- {
        --     position1 = go.get_position(),
        --     position2 = go.get_position(message.other_id),
        --     box_color = other_box_color,
        --     can_merge = self.can_merge,
        --     keyboard_input = self.keyboard_input,
        --     velocity = self.velocity,
        --     boost = self.boost,
        -- }

        local props = {
            ["can_merge"] = message.can_merge,
            ["box_color"] = message.box_color,
            ["velocity"] = message.velocity,
            ["boost"] = math.max(10, message.boost),
            ["keyboard_input"] = message.keyboard_input,
        }
        local position = message.position1 -- vmath.lerp(0.5, message.position1, message.position2)
        self.player_url = factory.create(self.factory_url, position, nil, props)
    end
end

function on_input(self, action_id, action)
end
